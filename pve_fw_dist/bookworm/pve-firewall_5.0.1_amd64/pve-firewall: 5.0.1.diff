--- Firewall.pm.orig	2024-03-29 22:54:57.020362588 +0100
+++ Firewall.pm	2024-03-29 23:04:02.996357556 +0100
@@ -2229,6 +2229,39 @@
 	my $action = (defined $rule->{action}) ? $rule->{action} : "";
 	$targetstr = $action eq 'PVEFW-SET-ACCEPT-MARK' ? "-g $action" : "-j $action";
     }
+	
+	#add second NAT rule if comment eq NAT
+	my $ext_if = 'vmbr0'; #external interface
+	if ($rule->{comment} && substr($rule->{comment},0,3) eq 'NAT') {
+		
+		#SNAT
+		if ($rule->{type} eq 'out') {
+			
+			run_command(['iptables -t nat -A POSTROUTING ' . $matchstr . ' -o ' . $ext_if . ' -j MASQUERADE']);
+			
+		}
+		
+		#DNAT
+		if ($rule->{type} eq 'in') {
+			
+			#with ipset field is empty
+			if (defined $rule->{sport}) {
+				#patch matchstr. Use sport like inbound port on $ext_if. So to get valid pve rule we delete it.
+				$matchstr =~ s/--sport $rule->{sport}//;
+			}	  
+
+			my $nat_matchstr = $matchstr; #matchstr include ipset data
+
+			#replace dport (its nat destonation in rule) to sport
+			$nat_matchstr =~ s/--dport $rule->{dport}/--dport $rule->{sport}/;
+
+			#delete destination data from rule, in DNAT rule that data must be at '--to-destination' block
+			$nat_matchstr =~ s/-d $rule->{dest}//;
+
+			$nat_matchstr .= ' -i ' . $ext_if . ' -j DNAT --to ' . $rule->{dest} . ':' . $rule->{dport};
+			run_command(['iptables -t nat -A PREROUTING ' . $nat_matchstr]);
+		}
+	}
 
     my @iptcmds;
     my $log = $rule->{log};
@@ -3739,6 +3772,9 @@
 
     my $vmfw_configs;
 
+	#flush NAT table, flush raw + add PREROUTING contrack
+	run_command(['iptables -t nat -F']);
+
     # fixme: once we read standard chains from config this needs to be put in test/standard cases below
     $pve_std_chains = dclone($pve_std_chains_conf);
 
